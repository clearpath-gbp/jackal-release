%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/humble/.*$
%global __requires_exclude_from ^/opt/ros/humble/.*$

Name:           ros-humble-jackal-control
Version:        1.0.4
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS jackal_control package

License:        BSD
URL:            http://wiki.ros.org/jackal_control
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-humble-controller-manager
Requires:       ros-humble-diff-drive-controller
Requires:       ros-humble-imu-filter-madgwick
Requires:       ros-humble-interactive-marker-twist-server
Requires:       ros-humble-jackal-description
Requires:       ros-humble-joint-state-broadcaster
Requires:       ros-humble-joint-trajectory-controller
Requires:       ros-humble-joy
Requires:       ros-humble-robot-localization
Requires:       ros-humble-robot-state-publisher
Requires:       ros-humble-teleop-twist-joy
Requires:       ros-humble-twist-mux
Requires:       ros-humble-ros-workspace
BuildRequires:  ros-humble-ament-cmake
BuildRequires:  ros-humble-controller-manager
BuildRequires:  ros-humble-diff-drive-controller
BuildRequires:  ros-humble-imu-filter-madgwick
BuildRequires:  ros-humble-interactive-marker-twist-server
BuildRequires:  ros-humble-jackal-description
BuildRequires:  ros-humble-joint-state-broadcaster
BuildRequires:  ros-humble-joint-trajectory-controller
BuildRequires:  ros-humble-joy
BuildRequires:  ros-humble-robot-localization
BuildRequires:  ros-humble-robot-state-publisher
BuildRequires:  ros-humble-teleop-twist-joy
BuildRequires:  ros-humble-twist-mux
BuildRequires:  ros-humble-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
Controllers for Jackal

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/humble" \
    -DAMENT_PREFIX_PATH="/opt/ros/humble" \
    -DCMAKE_PREFIX_PATH="/opt/ros/humble" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/humble/setup.sh" ]; then . "/opt/ros/humble/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/humble

%changelog
* Thu Apr 20 2023 Tony Baltovski <tbaltovski@clearpathrobotics.com> - 1.0.4-1
- Autogenerated by Bloom

